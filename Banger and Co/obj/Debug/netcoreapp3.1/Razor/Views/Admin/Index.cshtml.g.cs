#pragma checksum "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d5d215f70baa01cb204199a5260ec7b506b59a0f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Index), @"mvc.1.0.view", @"/Views/Admin/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\_ViewImports.cshtml"
using Banger_and_Co;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\_ViewImports.cshtml"
using Banger_and_Co.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d5d215f70baa01cb204199a5260ec7b506b59a0f", @"/Views/Admin/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3aa33e08f9c263da634f663e2cada3ad6b84e164", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Compact", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Luxury", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Offroad", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Sedan", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Sports", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "SUV", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Van", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Wagon", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Petrol", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Diesel", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Hybrid", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Electric", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Select Type", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Vehicle Equipment", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Child Seats and Strollers", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Other", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
  
    ViewData["Title"] = "Dashboard";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 7 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
 if (Model.Admin != false)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <h3 id=\"admin\" hidden>admin</h3>\r\n");
#nullable restore
#line 10 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<input id=\"numofusers\"");
            BeginWriteAttribute("value", " value=\"", 163, "\"", 191, 1);
#nullable restore
#line 12 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 171, Model.NumberOfUsers, 171, 20, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" type=\"hidden\" />\r\n<input id=\"userspage\" value=\"1\" type=\"hidden\" />\r\n<input id=\"numofbookings\"");
            BeginWriteAttribute("value", " value=\"", 286, "\"", 317, 1);
#nullable restore
#line 14 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 294, Model.NumberOfBookings, 294, 23, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" type=\"hidden\" />\r\n<input id=\"bookingspage\" value=\"1\" type=\"hidden\" />\r\n<input id=\"numofvehicles\"");
            BeginWriteAttribute("value", " value=\"", 415, "\"", 446, 1);
#nullable restore
#line 16 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 423, Model.NumberOfVehicles, 423, 23, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" type=\"hidden\" />\r\n<input id=\"vehiclespage\" value=\"1\" type=\"hidden\" />\r\n<input id=\"numofequipment\"");
            BeginWriteAttribute("value", " value=\"", 545, "\"", 577, 1);
#nullable restore
#line 18 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 553, Model.NumberOfEquipment, 553, 24, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" type=\"hidden\" />\r\n<input id=\"equipmentpage\" value=\"1\" type=\"hidden\" />\r\n\r\n");
            WriteLiteral(@"
<div class=""admin_dashboard"">
    <div class=""admin_dashboard_panel"">
        <span id=""btnUsers"" class=""admin_dashboard_panel_menuitem"">
            <label>USERS</label>
            <svg xmlns=""http://www.w3.org/2000/svg"" width=""10"" height=""15"" viewBox=""0 0 24 24"">
                <path d=""M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z"" />
            </svg>
        </span>
        <span id=""btnBookings"" class=""admin_dashboard_panel_menuitem"">
            <label>BOOKINGS</label>
            <svg xmlns=""http://www.w3.org/2000/svg"" width=""10"" height=""15"" viewBox=""0 0 24 24"">
                <path d=""M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z"" />
            </svg>
        </span>
        <span id=""btnVehicles"" class=""admin_dashboard_panel_menuitem"">
            <label>VEHICLES</label>
            <svg xmlns=""http://www.w3.org/2000/svg"" width=""10"" height=""15"" viewBox=""0 0 24 24"">
                <path d=""M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 ");
            WriteLiteral(@"2.829 2.83-11.996 12.17z"" />
            </svg>
        </span>
        <span id=""btnEquipment"" class=""admin_dashboard_panel_menuitem"">
            <label>EQUIPMENT</label>
            <svg xmlns=""http://www.w3.org/2000/svg"" width=""10"" height=""15"" viewBox=""0 0 24 24"">
                <path d=""M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z"" />
            </svg>
        </span>
    </div>
    <div class=""admin_dashboard_content"">
        <div id=""Users"" class=""admin_dashboard_content_users"">
            <div id=""useroverlay"" class=""admin_dashboard_content_users_popup"">
                <div id=""addadminoverlay"" class=""admin_dashboard_content_users_popup_addadmin"">
                    <button class='admin_dashboard_content_users_popup_addadmin_close' onclick='closeAddAdmin()' id='closepopup'><svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'><path d='M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206");
            WriteLiteral(@" 8.313 3.666 3.666 8.237-8.318 8.285 8.203z'/></svg></button>
                    <div id=""addadminoverlay"" class=""admin_dashboard_content_users_popup_addadmin_content"">
                        <label class=""admin_dashboard_content_users_popup_addadmin_content_heading"">ADD ADMIN</label>
                        <div class=""admin_dashboard_content_users_popup_addadmin_content_form"">
                            <table>
                                <tr>
                                    <td>
                                        <label id=""error"" class=""error"" hidden></label>
                                        <label id=""inputwarning"" class=""muted"" hidden>Please fill all fields</label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_users_popup_addadmin_content_form_name"" autocomplete=""off"" type=""text"" p");
            WriteLiteral(@"laceholder=""Full Name"" name=""name"" id=""adminname"" pattern=""^[A-Za-z ,.'-]+$"" required>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_users_popup_addadmin_content_form_phone"" autocomplete=""off"" type=""text"" placeholder=""Contact Number"" name=""phone"" id=""adminphone"" maxlength=""10"" pattern=""^[0-9]*$"" required>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_users_popup_addadmin_content_form_email"" autocomplete=""off"" type=""email"" placeholder=""E-mail Address"" name=""email"" id=""adminemail"" required>
                                    </td>
                                </tr>
                                <tr>
                   ");
            WriteLiteral(@"                 <td>
                                        <input class=""admin_dashboard_content_users_popup_addadmin_content_form_pwd"" autocomplete=""off"" type=""password"" placeholder=""Password"" name=""pwd"" id=""adminpwd"" required>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <button class=""admin_dashboard_content_users_popup_addadmin_content_form_create"" onclick=""addAdmin()"">Create Admin</button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""admin_dashboard_content_users_search"">
                <div>
                    <input id=""usersearch"" autocomplete=""off"" type=""text"" placeholder=""Search"">
                    <button id=""addadmin"" onclick=""enab");
            WriteLiteral(@"leAddAdmin()""><svg xmlns=""http://www.w3.org/2000/svg"" width=""12"" height=""12"" viewBox=""0 0 24 24""><path d=""M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z""/></svg>ADD ADMIN</button>
                </div>
                <label id=""usersearchlbl"" class=""muted"">Enter 3 or more characters</label>
            </div>
            <div class=""admin_dashboard_content_users_filter"">
                <label class=""admin_dashboard_content_users_filter_lbl"">Show only: </label>
                <div class=""admin_dashboard_content_users_filter_role"">
                    <label>Role</label>
                    <button id=""adminfilter"">ADMIN</button>
                    <button id=""clientfilter"">CLIENT</button>
                </div>
                <div class=""admin_dashboard_content_users_filter_status"">
                    <label>Status</label>
                    <button id=""nverifiedfilter"">NOT VERIFIED</button>
                    <button id=""verifiedfilter"">VERIFIED</button>
                    <button id=""bla");
            WriteLiteral(@"cklistfilter"">BLACKLISTED</button>
                    <button id=""repeatfilter"">REPEAT</button>
                </div>
            </div>
            <div class=""loading"" id=""usertoploading"">
                <div></div>
                <div></div>
                <div></div>
            </div>
            <label class=""admin_dashboard_content_users_empty"" id=""usersempty"">We couldn't find anything</label>
            <div class=""admin_dashboard_content_users_users"">
");
#nullable restore
#line 131 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                 foreach (var user in Model.Users)
                {
                    var index = Model.Users.IndexOf(user);

                    if (!Model.UserManager.GetRolesAsync(Model.UserManager.FindByNameAsync(user.UserName).Result).Result[0].Equals("SuperUser"))
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <div");
            BeginWriteAttribute("class", " class=\"", 8017, "\"", 8072, 2);
            WriteAttributeValue("", 8025, "admin_dashboard_content_users_users_user", 8025, 40, true);
#nullable restore
#line 137 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue(" ", 8065, index, 8066, 6, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n                            <div class=\"admin_dashboard_content_users_users_user_status\">\r\n");
#nullable restore
#line 139 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                 if (user.Status.Equals("Unverified"))
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    <span class=\"admin_dashboard_content_users_users_user_status_notverified\">NOT VERIFIED</span>\r\n");
#nullable restore
#line 142 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                }
                                else
                                {
                                    if (user.Status.Equals("Blacklisted"))
                                    {
                                        if (Model.BookingService.GetCountOfUser(user.Id) != 0)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <span class=\"admin_dashboard_content_users_users_user_status_blacklisted\">BLACKLISTED<svg");
            BeginWriteAttribute("onclick", " onclick=\"", 8900, "\"", 8942, 5);
            WriteAttributeValue("", 8910, "removeBlacklist(", 8910, 16, true);
#nullable restore
#line 149 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 8926, user.Id, 8926, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 8934, ",", 8934, 1, true);
#nullable restore
#line 149 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 8935, index, 8935, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 8941, ")", 8941, 1, true);
            EndWriteAttribute();
            WriteLiteral(@" id=""userremoveblacklist"" xmlns=""http://www.w3.org/2000/svg"" width=""12"" height=""12"" viewBox=""0 0 24 24""><path d=""M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"" /><label id=""userremoveblacklistid"" hidden>");
#nullable restore
#line 149 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Write(user.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</label></svg></span>
                                            <span class=""admin_dashboard_content_users_users_user_status_repeat"">REPEAT</span>
                                            <span class=""admin_dashboard_content_users_users_user_status_verified"">VERIFIED</span>
");
#nullable restore
#line 152 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <span class=\"admin_dashboard_content_users_users_user_status_blacklisted\">BLACKLISTED<svg");
            BeginWriteAttribute("onclick", " onclick=\"", 9797, "\"", 9839, 5);
            WriteAttributeValue("", 9807, "removeBlacklist(", 9807, 16, true);
#nullable restore
#line 155 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 9823, user.Id, 9823, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 9831, ",", 9831, 1, true);
#nullable restore
#line 155 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 9832, index, 9832, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 9838, ")", 9838, 1, true);
            EndWriteAttribute();
            WriteLiteral(@" id=""userremoveblacklist"" xmlns=""http://www.w3.org/2000/svg"" width=""12"" height=""12"" viewBox=""0 0 24 24""><path d=""M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"" /><label id=""userremoveblacklistid"" hidden>");
#nullable restore
#line 155 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Write(user.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label></svg></span>\r\n                                            <span class=\"admin_dashboard_content_users_users_user_status_verified\">VERIFIED</span>\r\n");
#nullable restore
#line 157 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                        }
                                    }
                                    else
                                    {
                                        if (Model.BookingService.GetCountOfUser(user.Id) != 0)
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                            <span class=""admin_dashboard_content_users_users_user_status_repeat"">REPEAT</span>
                                            <span class=""admin_dashboard_content_users_users_user_status_verified"">VERIFIED</span>
");
#nullable restore
#line 165 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <span class=\"admin_dashboard_content_users_users_user_status_verified\">VERIFIED</span>\r\n");
#nullable restore
#line 169 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                        }
                                    }
                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            </div>\r\n                            <div class=\"admin_dashboard_content_users_users_user_role\">\r\n");
#nullable restore
#line 174 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                  
                                    var currentRole = Model.UserManager.GetRolesAsync(Model.UserManager.FindByNameAsync(User.Identity.Name).Result).Result[0];
                                

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <label>Type: ");
#nullable restore
#line 177 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                        Write(user.Role);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label>\r\n");
#nullable restore
#line 178 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                 if (currentRole.Equals("SuperUser"))
                                {
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 180 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                     if (user.Role.Equals("Client"))
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <button id=\"usermakeadmin\"");
            BeginWriteAttribute("onclick", " onclick=\"", 11946, "\"", 11994, 5);
            WriteAttributeValue("", 11956, "toggleAdminPriviledge(", 11956, 22, true);
#nullable restore
#line 182 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 11978, user.Id, 11978, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 11986, ",", 11986, 1, true);
#nullable restore
#line 182 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 11987, index, 11987, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 11993, ")", 11993, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Grant Admin Privileges</button>\r\n");
#nullable restore
#line 183 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                    }
                                    else
                                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                        <button id=\"usermakeclient\"");
            BeginWriteAttribute("onclick", " onclick=\"", 12216, "\"", 12264, 5);
            WriteAttributeValue("", 12226, "toggleAdminPriviledge(", 12226, 22, true);
#nullable restore
#line 186 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 12248, user.Id, 12248, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 12256, ",", 12256, 1, true);
#nullable restore
#line 186 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 12257, index, 12257, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 12263, ")", 12263, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Revoke Admin Privileges</button>\r\n");
#nullable restore
#line 187 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 187 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                     
                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            </div>\r\n                            <label>USER #");
#nullable restore
#line 190 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                    Write(user.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label>\r\n                            <label>Name: <span>");
#nullable restore
#line 191 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                          Write(user.FullName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span></label>\r\n                            <label>E-mail Address: <span>");
#nullable restore
#line 192 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                                    Write(user.Email);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span></label>\r\n                            <label>Contact Number: <span>");
#nullable restore
#line 193 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                                                    Write(user.PhoneNumber);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span></label>\r\n                            <div class=\"admin_dashboard_content_users_users_user_buttons\">\r\n                                <div>\r\n                                    <button id=\"usermoreinfo\"");
            BeginWriteAttribute("onclick", " onclick=\"", 12915, "\"", 12954, 6);
            WriteAttributeValue("", 12925, "userEdit(", 12925, 9, true);
#nullable restore
#line 196 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 12934, user.Id, 12934, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 12942, ",", 12942, 1, true);
            WriteAttributeValue(" ", 12943, "0,", 12944, 3, true);
#nullable restore
#line 196 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue(" ", 12946, index, 12947, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 12953, ")", 12953, 1, true);
            EndWriteAttribute();
            WriteLiteral(">More Info</button>\r\n");
            WriteLiteral("                                </div>\r\n                                <div>\r\n                                    <button");
            BeginWriteAttribute("onclick", " onclick=\"", 13209, "\"", 13239, 3);
            WriteAttributeValue("", 13219, "removeUser(", 13219, 11, true);
#nullable restore
#line 200 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 13230, user.Id, 13230, 8, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 13238, ")", 13238, 1, true);
            EndWriteAttribute();
            WriteLiteral(@" id=""userremove"">Remove User<svg xmlns=""http://www.w3.org/2000/svg"" width=""12"" height=""12"" viewBox=""0 0 24 24""><path d=""M9 19c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5-17v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712zm-3 4v16h-14v-16h-2v18h18v-18h-2z"" /></svg></button>
                                </div>
                            </div>
                        </div>
");
#nullable restore
#line 204 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                    }
                }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"            </div>
            <div class=""admin_dashboard_content_users_loadmore"">
                <button id=""userloadmore"">Load More</button>
            </div>
            <div class=""loading"" id=""userloading"">
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
        <div id=""Bookings"" class=""admin_dashboard_content_bookings"">
            <div class=""admin_dashboard_content_bookings_search"">
                <div>
                    <input id=""bookingsearch"" autocomplete=""off"" type=""text"" placeholder=""Search"">
                </div>
                <label id=""bookingsearchlbl"" class=""muted"">Enter 3 or more characters</label>
            </div>
            <div class=""loading"" id=""bookingtoploading"">
                <div></div>
                <div></div>
                <div></div>
            </div>
            <label class=""admin_dashboard_content_bookings_empty"" id=""bookingsempty"">We couldn't find anything</label");
            WriteLiteral(@">
            <div class=""admin_dashboard_content_bookings_bookings"">
                <table class=""admin_dashboard_content_bookings_bookings_table"" cellspacing=""0"" cellpadding=""0"">
                    <thead>
                        <tr>
                            <th>Reference No.</th>
                            <th>User ID</th>
                            <th>Pickup Date</th>
                            <th>Return Date</th>
                            <th>Status</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
");
#nullable restore
#line 242 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                         foreach (var booking in Model.Bookings)
                        {
                            var index = Model.Bookings.IndexOf(booking) + 1;


#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 247 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(booking.ReferenceNumber);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 248 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(booking.User.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 249 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(booking.PickupDate);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 250 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(booking.ReturnDate);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 251 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(booking.Status);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td><button");
            BeginWriteAttribute("onclick", " onclick=\"", 16051, "\"", 16094, 5);
            WriteAttributeValue("", 16061, "bookingEdit(", 16061, 12, true);
#nullable restore
#line 252 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 16073, booking.Id, 16073, 11, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 16084, ",0,", 16084, 3, true);
#nullable restore
#line 252 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 16087, index, 16087, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 16093, ")", 16093, 1, true);
            EndWriteAttribute();
            WriteLiteral(">More Details</button><button");
            BeginWriteAttribute("onclick", " onclick=\"", 16124, "\"", 16167, 5);
            WriteAttributeValue("", 16134, "bookingEdit(", 16134, 12, true);
#nullable restore
#line 252 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 16146, booking.Id, 16146, 11, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 16157, ",1,", 16157, 3, true);
#nullable restore
#line 252 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 16160, index, 16160, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 16166, ")", 16166, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Edit</button></td>\r\n                            </tr>\r\n");
#nullable restore
#line 254 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    </tbody>
                </table>
            </div>
            <div class=""admin_dashboard_content_bookings_loadmore"">
                <button id=""bookingloadmore"">Load More</button>
            </div>
            <div class=""loading"" id=""bookingloading"">
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
        <div id=""Vehicles"" class=""admin_dashboard_content_vehicles"">
            <div id=""vehicleoverlay"" class=""admin_dashboard_content_vehicles_popup"">
                <div id=""addvehicleoverlay"" class=""admin_dashboard_content_vehicles_popup_addvehicle"">
                    <button class='admin_dashboard_content_vehicles_popup_addvehicle_close' onclick='closeAddVehicle()' id='closepopup'><svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'><path d='M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 ");
            WriteLiteral(@"8.285 8.203z'/></svg></button>
                    <div id=""addvehicleoverlay"" class=""admin_dashboard_content_vehicles_popup_addvehicle_content"">
                        <label class=""admin_dashboard_content_vehicles_popup_addvehicle_content_heading"">ADD VEHICLE</label>
                        <div class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form"">
                            <table>
                                <tr>
                                    <td>
                                        <label id=""error"" class=""error"" hidden></label>
                                        <label id=""inputwarning"" class=""muted"" hidden>Please fill all fields</label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_manufacturer"" autocomplete=""off"" type=""text"" ");
            WriteLiteral(@"placeholder=""Manufacturer"" name=""manufacturer"" id=""vehiclemanufacturer"" required>
                                        <label class=""muted"">Manufacturer will be created if it does not exist</label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_model"" autocomplete=""off"" type=""text"" placeholder=""Model"" name=""model"" id=""vehiclemodel"" required>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_year"" autocomplete=""off"" type=""text"" placeholder=""Year"" name=""year"" id=""vehicleyear"" maxlength=""4"" pattern=""^[0-9]*$"" required>
                                  ");
            WriteLiteral(@"  </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_color"" autocomplete=""off"" type=""text"" placeholder=""Color"" name=""color"" id=""vehiclecolor"" required>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <select class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_category"" name=""category"" id=""vehiclecategory"" required>
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f45971", async() => {
                WriteLiteral("Select Category");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f47495", async() => {
                WriteLiteral("Compact");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f48700", async() => {
                WriteLiteral("Luxury");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f49904", async() => {
                WriteLiteral("Offroad");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f51109", async() => {
                WriteLiteral("Sedan");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f52312", async() => {
                WriteLiteral("Sports");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f53516", async() => {
                WriteLiteral("SUV");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f54717", async() => {
                WriteLiteral("Van");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f55918", async() => {
                WriteLiteral("Wagon");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </select>    
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <select class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_fueltype"" name=""fueltype"" id=""vehiclefueltype"" required>
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f57519", async() => {
                WriteLiteral("Select Fuel Type");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f59044", async() => {
                WriteLiteral("Petrol");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f60248", async() => {
                WriteLiteral("Diesel");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f61454", async() => {
                WriteLiteral("Hybrid");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f62660", async() => {
                WriteLiteral("Electric");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </select>    
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_plate"" autocomplete=""off"" type=""text"" placeholder=""Number Plate"" name=""plate"" id=""vehicleplate"" required>
                                        <label class=""muted"">Eg: WPAAA1111</label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_rate"" autocomplete=""off"" type=""text"" placeholder=""Rate (per day)"" name=""rate"" id=""vehiclerate"" pattern=""^[1-9]\d*(\.\d+)?$"" required>
                                    </td>
                                </tr>
 ");
            WriteLiteral(@"                               <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_img"" type=""file"" id=""vehicleimage"" accept=""image/*"" required />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <button class=""admin_dashboard_content_vehicles_popup_addvehicle_content_form_create"" onclick=""addVehicle()"">Create Vehicle</button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""admin_dashboard_content_vehicles_search"">
                <div>
                    <input id=""vehiclesearch"" autocomplete=""off"" type=""text"" placeholder=""Search"">
             ");
            WriteLiteral(@"       <button id=""addvehicle"" onclick=""enableAddVehicle()""><svg xmlns=""http://www.w3.org/2000/svg"" width=""12"" height=""12"" viewBox=""0 0 24 24""><path d=""M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z""/></svg>ADD VEHICLE</button>
                </div>
                <label id=""vehiclesearchlbl"" class=""muted"">Enter 3 or more characters</label>
            </div>
            <div class=""admin_dashboard_content_vehicles_filter"">
                <label class=""admin_dashboard_content_vehicles_filter_lbl"">Show only: </label>
                <div class=""admin_dashboard_content_vehicles_filter_status"">
                    <label>Status</label>
                    <button id=""availablefilter"">AVAILABLE</button>
                    <button id=""bookedfilter"">BOOKED</button>
                </div>
                <div class=""admin_dashboard_content_vehicles_filter_type"">
                    <label>Vehicle Type</label>
                    <button id=""compactfilter"">COMPACT</button>
                    <button id");
            WriteLiteral(@"=""luxuryfilter"">LUXURY</button>
                    <button id=""offroadfilter"">OFFROAD</button>
                    <button id=""sedanfilter"">SEDAN</button>
                    <button id=""sportsfilter"">SPORTS</button>
                    <button id=""suvfilter"">SUV</button>
                    <button id=""vanfilter"">VAN</button>
                    <button id=""wagonfilter"">WAGON</button>
                </div>
            </div>
            <div class=""loading"" id=""vehicletoploading"">
                <div></div>
                <div></div>
                <div></div>
            </div>
            <label class=""admin_dashboard_content_vehicles_empty"" id=""vehiclesempty"">We couldn't find anything</label>
            <div class=""admin_dashboard_content_vehicles_vehicles"">
                <table class=""admin_dashboard_content_vehicles_vehicles_table"" cellspacing=""0"" cellpadding=""0"">
                    <thead>
                        <tr>
                            <th>Vehicle ID</th>
        ");
            WriteLiteral(@"                    <th>Manufacturer</th>
                            <th>Model</th>
                            <th>Year</th>
                            <th>Category</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
");
#nullable restore
#line 399 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                         foreach (var vehicle in Model.Vehicles)
                        {
                            var index = Model.Vehicles.IndexOf(vehicle) + 1;


#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 404 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(vehicle.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 405 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(vehicle.Manufacturer.ManufacturerName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 406 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(vehicle.Model);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 407 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(vehicle.Year);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 408 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(vehicle.Category);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td><button");
            BeginWriteAttribute("onclick", " onclick=\"", 26550, "\"", 26593, 5);
            WriteAttributeValue("", 26560, "vehicleEdit(", 26560, 12, true);
#nullable restore
#line 409 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 26572, vehicle.Id, 26572, 11, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 26583, ",0,", 26583, 3, true);
#nullable restore
#line 409 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 26586, index, 26586, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 26592, ")", 26592, 1, true);
            EndWriteAttribute();
            WriteLiteral(">More Details</button><button");
            BeginWriteAttribute("onclick", " onclick=\"", 26623, "\"", 26666, 5);
            WriteAttributeValue("", 26633, "vehicleEdit(", 26633, 12, true);
#nullable restore
#line 409 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 26645, vehicle.Id, 26645, 11, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 26656, ",1,", 26656, 3, true);
#nullable restore
#line 409 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 26659, index, 26659, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 26665, ")", 26665, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Edit</button></td>\r\n                            </tr>\r\n");
#nullable restore
#line 411 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    </tbody>
                </table>
            </div>
            <div class=""admin_dashboard_content_vehicles_vehicles"">

            </div>
            <div class=""admin_dashboard_content_vehicles_loadmore"">
                <button id=""vehicleloadmore"">Load More</button>
            </div>
            <div class=""loading"" id=""vehicleloading"">
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
        <div id=""Equipment"" class=""admin_dashboard_content_equipment"">
            <div id=""equipmentoverlay"" class=""admin_dashboard_content_equipment_popup"">
                <div id=""addequipmentoverlay"" class=""admin_dashboard_content_equipment_popup_addequipment"">
                    <button class='admin_dashboard_content_equipment_popup_addequipment_close' onclick='closeAddEquipment()' id='closepopup'><svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'><path d='M24 20.188l-8.315-8.20");
            WriteLiteral(@"9 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z'/></svg></button>
                    <div id=""addequipmentoverlay"" class=""admin_dashboard_content_equipment_popup_addequipment_content"">
                        <label class=""admin_dashboard_content_equipment_popup_addequipment_content_heading"">ADD EQUIPMENT</label>
                        <div class=""admin_dashboard_content_equipment_popup_addequipment_content_form"">
                            <table>
                                <tr>
                                    <td>
                                        <label id=""error"" class=""error"" hidden></label>
                                        <label id=""inputwarning"" class=""muted"" hidden>Please fill all fields</label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <in");
            WriteLiteral(@"put class=""admin_dashboard_content_equipment_popup_addequipment_content_form_name"" autocomplete=""off"" type=""text"" placeholder=""Equipment Name"" name=""name"" id=""equipmentname"" pattern=""^[A-Za-z ,.'-]+$"" required>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <select class=""admin_dashboard_content_equipment_popup_addequipment_content_form_type"" id=""equipmenttype"">
                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f75527", async() => {
                WriteLiteral("Select Type");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f77049", async() => {
                WriteLiteral("Vehicle Equipment");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f78266", async() => {
                WriteLiteral("Baby Seat");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_15.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d215f70baa01cb204199a5260ec7b506b59a0f79475", async() => {
                WriteLiteral("Other");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input class=""admin_dashboard_content_equipment_popup_addequipment_content_form_stock"" autocomplete=""off"" type=""text"" placeholder=""Number of Pieces"" name=""stock"" id=""equipmentstock"" pattern=""^[0-9]*$"" required>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <button class=""admin_dashboard_content_vehicles_popup_addequipment_content_form_create"" onclick=""addEquipment()"">Add Equipment</button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </");
            WriteLiteral(@"div>
            <div class=""admin_dashboard_content_equipment_search"">
                <div>
                    <input id=""equipmentsearch"" autocomplete=""off"" type=""text"" placeholder=""Search"">
                    <button id=""addequipment"" onclick=""enableAddEquipment()""><svg xmlns=""http://www.w3.org/2000/svg"" width=""12"" height=""12"" viewBox=""0 0 24 24""><path d=""M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z""/></svg>ADD EQUIPMENT</button>
                </div>
                <label id=""equipmentsearchlbl"" class=""muted"">Enter 3 or more characters</label>
            </div>
            <div class=""loading"" id=""equipmenttoploading"">
                <div></div>
                <div></div>
                <div></div>
            </div>
            <label class=""admin_dashboard_content_equipment_empty"" id=""equipmentempty"">We couldn't find anything</label>
            <div class=""admin_dashboard_content_equipment_equipment"">
                <table class=""admin_dashboard_content_equipment_equipment_table""");
            WriteLiteral(@" cellspacing=""0"" cellpadding=""0"">
                    <thead>
                        <tr>
                            <th>Equipment ID</th>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Number of Pieces</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
");
#nullable restore
#line 496 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                         foreach (var equipment in Model.Equipments)
                        {
                            var index = Model.Equipments.IndexOf(equipment);


#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 501 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(equipment.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 502 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(equipment.EquipmentName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 503 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(equipment.Type);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 504 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                               Write(equipment.NumberOfPieces);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td><button");
            BeginWriteAttribute("onclick", " onclick=\"", 32681, "\"", 32728, 5);
            WriteAttributeValue("", 32691, "equipmentEdit(", 32691, 14, true);
#nullable restore
#line 505 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 32705, equipment.Id, 32705, 13, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 32718, ",0,", 32718, 3, true);
#nullable restore
#line 505 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 32721, index, 32721, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 32727, ")", 32727, 1, true);
            EndWriteAttribute();
            WriteLiteral(">More Details</button><button");
            BeginWriteAttribute("onclick", " onclick=\"", 32758, "\"", 32805, 5);
            WriteAttributeValue("", 32768, "equipmentEdit(", 32768, 14, true);
#nullable restore
#line 505 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 32782, equipment.Id, 32782, 13, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 32795, ",0,", 32795, 3, true);
#nullable restore
#line 505 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
WriteAttributeValue("", 32798, index, 32798, 6, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 32804, ")", 32804, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Edit</button></td>\r\n                            </tr>\r\n");
#nullable restore
#line 507 "X:\User\Documents\College\3rd Year\Sem 1\Assignments\EIRLSS Individual\Banger and Co\Banger and Co\Views\Admin\Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                    </tbody>
                </table>
            </div>
            <div class=""admin_dashboard_content_equipment_loadmore"">
                <button id=""equipmentloadmore"">Load More</button>
            </div>
            <div class=""loading"" id=""equipmentloading"">
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $(""#Bookings"").hide();
        $(""#Users"").hide();
        $(""#Vehicles"").hide();
        $(""#Equipment"").hide();

        $(""#usersempty"").hide();
        $(""#vehiclesempty"").hide();
        $(""#bookingsempty"").hide();
        $(""#equipmentempty"").hide();

        $("".admin_dashboard_content_users_loadmore"").hide();
        $("".admin_dashboard_content_vehicles_loadmore"").hide();
        $("".admin_dashboard_content_bookings_loadmore"").hide();
        $("".admin_dashboard_content_equipment_loadmore"").hide();

    ");
            WriteLiteral(@"    $(""#userloading"").hide();
        $(""#vehicleloading"").hide();
        $(""#bookingloading"").hide();
        $(""#equipmentloading"").hide();
        $(""#usertoploading"").hide();
        $(""#vehicletoploading"").hide();
        $(""#bookingtoploading"").hide();
        $(""#equipmenttoploading"").hide();

        toggleUsers();

        if ($(""#admin"").html() == ""admin"") {
            $("".header_nav_desktop"").hide();
            $("".footer"").hide();
            $("".header_signout"").css(""display"", ""flex"");
        }

        $(""body"").css(""min-height"", ""calc(100vh - 5.4rem)"");
        $(""body"").css(""max-height"", ""calc(100vh - 5.4rem)"");
        $(""body"").css(""overflow-y"", ""hidden"");

        $(""#usersearchlbl"").css(""width"", ""100%"");
        $(""#usersearchlbl"").css(""margin-bottom"", ""1rem"");
        $(""#vehiclesearchlbl"").css(""width"", ""100%"");
        $(""#vehiclesearchlbl"").css(""margin-bottom"", ""1rem"");
        $(""#bookingsearchlbl"").css(""width"", ""100%"");
        $(""#bookingsearchlbl"").css(");
            WriteLiteral(@"""margin-bottom"", ""1rem"");
        $(""#equipmentsearchlbl"").css(""width"", ""100%"");
        $(""#equipmentsearchlbl"").css(""margin-bottom"", ""1rem"");

        var usercalc = 10 * $(""#userspage"").val();
        if ($(""#numofusers"").val() != 0) {
            if ($(""#numofusers"").val() > $("".admin_dashboard_content_users_users_user"").length && $("".admin_dashboard_content_users_users_user"").length >= usercalc) {
                $("".admin_dashboard_content_users_loadmore"").show();
            }
        }

        var vehiclecalc = 10 * $(""#vehiclespage"").val();
        if ($(""#numofvehicles"").val() != 0) {
            if ($(""#numofvehicles"").val() > $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length && $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length >= vehiclecalc) {
                $("".admin_dashboard_content_vehicles_loadmore"").show();
            }
        }

        var bookingcalc = 10 * $(""#bookingspage"").val();
        if ($(""#numofbookings"").val() != 0)");
            WriteLiteral(@" {
            if ($(""#numofbookings"").val() > $("".admin_dashboard_content_bookings_bookings_table tbody tr"").length && $("".admin_dashboard_content_bookings_bookings_table tbody tr"").length >= bookingcalc) {
                $("".admin_dashboard_content_bookings_loadmore"").show();
            }
        }

        var equipmentcalc = 10 * $(""#equipmentpage"").val();
        if ($(""#numofequipment"").val() != 0) {
            if ($(""#numofequipment"").val() > $("".admin_dashboard_content_equipment_equipment_table tbody tr"").length && $("".admin_dashboard_content_equipment_equipment_table tbody tr"").length >= equipmentcalc) {
                $("".admin_dashboard_content_equipment_loadmore"").show();
            }
        }
    });

    var btnBookings = document.getElementById(""btnBookings"");
    var btnUsers = document.getElementById(""btnUsers"");
    var btnVehicles = document.getElementById(""btnVehicles"");
    var btnEquipment = document.getElementById(""btnEquipment"");
    var Bookings = document.getE");
            WriteLiteral(@"lementById(""Bookings"");
    var Users = document.getElementById(""Users"");
    var Vehicles = document.getElementById(""Vehicles"");
    var Equipment = document.getElementById(""Equipment"");
    var addproductbtn = document.getElementById(""addproductbtn"");
    var addproductform = document.getElementById(""addproductform"");

    btnBookings.onclick = function () { toggleBookings(); };
    btnUsers.onclick = function () { toggleUsers(); };
    btnVehicles.onclick = function () { toggleVehicles(); };
    btnEquipment.onclick = function () { toggleEquipment(); };

    function toggleBookings() {
        if (btnUsers.classList.contains('active')) {
            btnUsers.classList.remove('active');
            btnBookings.className = ""active"";
            $(""#Users"").hide();
            $(""#Bookings"").show();
        }
        else if (btnVehicles.classList.contains('active')) {
            btnVehicles.classList.remove('active');
            btnBookings.className = ""active"";
            $(""#Vehicl");
            WriteLiteral(@"es"").hide();
            $(""#Bookings"").show();
        }
        else if (btnEquipment.classList.contains('active')) {
            btnEquipment.classList.remove('active');
            btnBookings.className = ""active"";
            $(""#Equipment"").hide();
            $(""#Bookings"").show();
        }
        else {
            btnBookings.className = ""active"";
            $(""#Bookings"").show();
        }
    }

    function toggleUsers() {
        if (btnBookings.classList.contains('active')) {
            btnBookings.classList.remove('active');
            btnUsers.className = ""active"";
            $(""#Bookings"").hide();
            $(""#Users"").show();
        }
        else if (btnVehicles.classList.contains('active')) {
            btnVehicles.classList.remove('active');
            btnUsers.className = ""active"";
            $(""#Vehicles"").hide();
            $(""#Users"").show();
        }
        else if (btnEquipment.classList.contains('active')) {
            btnEquipment.class");
            WriteLiteral(@"List.remove('active');
            btnUsers.className = ""active"";
            $(""#Equipment"").hide();
            $(""#Users"").show();
        }
        else {
            btnUsers.className = ""active"";
            $(""#Users"").show();
        }

    }

    function toggleVehicles() {
        if (btnBookings.classList.contains('active')) {
            btnBookings.classList.remove('active');
            btnVehicles.className = ""active"";
            $(""#Bookings"").hide();
            $(""#Vehicles"").show();
        }
        else if (btnUsers.classList.contains('active')) {
            btnUsers.classList.remove('active');
            btnVehicles.className = ""active"";
            $(""#Users"").hide();
            $(""#Vehicles"").show();
        }
        else if (btnEquipment.classList.contains('active')) {
            btnEquipment.classList.remove('active');
            btnVehicles.className = ""active"";
            $(""#Equipment"").hide();
            $(""#Vehicles"").show();
        }
   ");
            WriteLiteral(@"     else {
            btnVehicles.className = ""active"";
            $(""#Vehicles"").show();
        }
    }

    function toggleEquipment() {
        if (btnBookings.classList.contains('active')) {
            btnBookings.classList.remove('active');
            btnEquipment.className = ""active"";
            $(""#Bookings"").hide();
            $(""#Equipment"").show();
        }
        else if (btnUsers.classList.contains('active')) {
            btnUsers.classList.remove('active');
            btnEquipment.className = ""active"";
            $(""#Users"").hide();
            $(""#Equipment"").show();
        }
        else if (btnVehicles.classList.contains('active')) {
            btnVehicles.classList.remove('active');
            btnEquipment.className = ""active"";
            $(""#Vehicles"").hide();
            $(""#Equipment"").show();
        }
        else {
            btnEquipment.className = ""active"";
            $(""#Equipment"").show();
        }
    }

    $(""#vehiclesearch"").on");
            WriteLiteral(@"(""input"", function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""grey"");

                var keyword = $(""#vehiclesearch"").val();
            }
        }
        else {
            if ($(this).val().length < 3) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""dimgrey"");

                var keyword = $(""#vehiclesearch"").val();
            }
        }
    });
    $(""#vehiclesearch"").focusout(function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""grey"");
            }
        }
        else {
            if ($(this).val().length");
            WriteLiteral(@" < 3 && $(this).val().length > 0) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""dimgrey"");
            }
        }
    });

    $(""#bookingsearch"").on(""input"", function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#bookingsearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#bookingsearchlbl"").css(""color"", ""grey"");

                var keyword = $(""#bookingsearch"").val();
            }
        }
        else {
            if ($(this).val().length < 3) {
                $(""#bookingsearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#bookingsearchlbl"").css(""color"", ""dimgrey"");

                var keyword = $(""#bookingsearch"").val();
            }
        }
    });
    $(""#bookingsearch"").focusout(function (e) {
        if (e.keyCode == 8) {
            if ($(th");
            WriteLiteral(@"is).val().length < 3) {
                $(""#bookingsearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#bookingsearchlbl"").css(""color"", ""grey"");
            }
        }
        else {
            if ($(this).val().length < 3 && $(this).val().length > 0) {
                $(""#bookingsearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#bookingsearchlbl"").css(""color"", ""dimgrey"");
            }
        }
    });


    //User filter
    function filterRoleStatus(role, status) {
        $("".admin_dashboard_content_users_loadmore"").hide();
        $(""#usersempty"").hide();

        if ($(""#usersearch"").val().length !== 0) {
            $(""#usersearch"").val("""")
        }

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetUsers?role=' + role + '&status=' + status,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
          ");
            WriteLiteral(@"      $(""#usertoploading"").show();

                if (data[0] != 0) {
                    $(""#userspage"").val(0);
                    $(""#numofusers"").val(data[0]);
                    delete data[0];

                    $("".admin_dashboard_content_users_filter_role button"").removeClass(""active"");
                    $("".admin_dashboard_content_users_filter_status button"").removeClass(""active"");

                    if (role == ""Admin"") {
                        $(""#adminfilter"").addClass(""active"");
                    }
                    else {
                        $(""#clientfilter"").addClass(""active"");
                    }
                    if (status == ""Unverified"") {
                        $(""#nverifiedfilter"").addClass(""active"");
                    }
                    else if (status == ""Verified"") {
                        $(""#verifiedfilter"").addClass(""active"");
                    }
                    else if (status == ""Blacklisted"") {
                        $");
            WriteLiteral(@"(""#blacklistfilter"").addClass(""active"");
                    }
                    else {
                        $(""#repeatfilter"").addClass(""active"");
                    }

                    setTimeout(function () {
                        $(""#usertoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboard_content_users_users"").empty();
                            $("".admin_dashboard_content_users_users"").append(data);

                            $(""#userspage"").val(parseInt($(""#userspage"").val()) + 1);

                            var calc = 10 * $(""#userspage"").val();
                            if ($(""#numofusers"").val() > $("".admin_dashboard_content_users_users_user"").length && $("".admin_dashboard_content_users_users_user"").length >= calc) {
                                $("".admin_dashboard_content_users_loadmore"").show();
                            }
                        }
                        else {
           ");
            WriteLiteral(@"                 $("".admin_dashboard_content_users_users"").empty();
                            $(""#usersempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }
    function filterRole(role) {
        $("".admin_dashboard_content_users_loadmore"").hide();
        $(""#usersempty"").hide();

        if ($(""#usersearch"").val().length !== 0) {
            $(""#usersearch"").val("""")
        }

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetUsers?role=' + role,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#usertoploading"").show();

                if (data[0] != 0) {
                    $(""#userspage"").val(0);
                    $(""#numofusers"").val(data[0]);");
            WriteLiteral(@"
                    delete data[0];

                    if (role === ""Admin"") {
                        $(""#adminfilter"").addClass(""active"");

                        if ($(""#clientfilter"").hasClass(""active"")) {
                            $(""#clientfilter"").removeClass(""active"");
                        }
                    }
                    else {
                        $(""#clientfilter"").addClass(""active"");

                        if ($(""#adminfilter"").hasClass(""active"")) {
                            $(""#adminfilter"").removeClass(""active"");
                        }
                    }

                    setTimeout(function () {
                        $(""#usertoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboard_content_users_users"").empty();
                            $("".admin_dashboard_content_users_users"").append(data);

                            $(""#userspage"").val(parseInt($(""#userspage"").val()) ");
            WriteLiteral(@"+ 1);

                            var calc = 10 * $(""#userspage"").val();
                            if ($(""#numofusers"").val() > $("".admin_dashboard_content_users_users_user"").length && $("".admin_dashboard_content_users_users_user"").length >= calc) {
                                $("".admin_dashboard_content_users_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_users_users"").empty();
                            $(""#usersempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }
    function filterStatus(status) {
        $("".admin_dashboard_content_users_loadmore"").hide();
        $(""#usersempty"").hide();

        if ($(""#usersearch"").val().length !== 0) {
           ");
            WriteLiteral(@" $(""#usersearch"").val("""")
        }

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetUsers?status=' + status,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#usertoploading"").show();

                if (data[0] != 0) {
                    $(""#userspage"").val(0);
                    $(""#numofusers"").val(data[0]);
                    delete data[0];

                    $("".admin_dashboard_content_users_filter_status button"").removeClass(""active"");

                    if (status == ""Unverified"") {
                        $(""#nverifiedfilter"").addClass(""active"");
                    }
                    else if (status == ""Verified"") {
                        $(""#verifiedfilter"").addClass(""active"");
                    }
                    else if (status == ""Blacklisted"") {
                        $(""#blacklistfilter"").addClass(""active"");
                    }");
            WriteLiteral(@"
                    else {
                        $(""#repeatfilter"").addClass(""active"");
                    }

                    setTimeout(function () {
                        $(""#usertoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboard_content_users_users"").empty();
                            $("".admin_dashboard_content_users_users"").append(data);

                            $(""#userspage"").val(parseInt($(""#userspage"").val()) + 1);

                            var calc = 10 * $(""#userspage"").val();
                            if ($(""#numofusers"").val() > $("".admin_dashboard_content_users_users_user"").length && $("".admin_dashboard_content_users_users_user"").length >= calc) {
                                $("".admin_dashboard_content_users_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_users_users"").empt");
            WriteLiteral(@"y();
                            $(""#usersempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }
    function getAllUsers() {
        $("".admin_dashboard_content_users_loadmore"").hide();
        $(""#usersempty"").hide();

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetUsers',
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#usertoploading"").show();

                if (data[0] != 0) {
                    $(""#userspage"").val(0);
                    $(""#numofusers"").val(data[0]);
                    delete data[0];

                    setTimeout(function () {
                        $(""#usertoploading"").hide();

                        if (data.length ");
            WriteLiteral(@"!= 0) {
                            $("".admin_dashboard_content_users_users"").empty();
                            $("".admin_dashboard_content_users_users"").append(data);

                            $(""#userspage"").val(parseInt($(""#userspage"").val()) + 1);

                            var calc = 10 * $(""#userspage"").val();
                            if ($(""#numofusers"").val() > $("".admin_dashboard_content_users_users_user"").length && $("".admin_dashboard_content_users_users_user"").length >= calc) {
                                $("".admin_dashboard_content_users_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_users_users"").empty();
                            $(""#usersempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error whi");
            WriteLiteral(@"le retrieving data"");
            }
        });
    }
    function searchUsers(keyword) {
        $("".admin_dashboard_content_users_loadmore"").hide();
        $(""#usersempty"").hide();

        $(""admin_dashboard_content_users_filter_role button"").removeClass(""active"");
        $(""admin_dashboard_content_users_filter_status button"").removeClass(""active"");

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetUsers?keyword=' + keyword,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                if (data[0] != 0) {
                    $(""#userspage"").val(0);
                    $(""#numofusers"").val(data[0]);
                    delete data[0];

                    setTimeout(function () {
                        $(""#usertoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboard_content_users_users"").empty();
                  ");
            WriteLiteral(@"          $("".admin_dashboard_content_users_users"").append(data);

                            $(""#userspage"").val(parseInt($(""#userspage"").val()) + 1);

                            var calc = 10 * $(""#userspage"").val();
                            if ($(""#numofusers"").val() > $("".admin_dashboard_content_users_users_user"").length && $("".admin_dashboard_content_users_users_user"").length >= calc) {
                                $("".admin_dashboard_content_users_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_users_users"").empty();
                            $(""#usersempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }

    $(""#usersearch"").on(""input"", function (e) {");
            WriteLiteral(@"
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#usersearchlbl"").css(""color"", ""red"");
                searchUsers("""");
            }
            else {
                $(""#usersearchlbl"").css(""color"", ""grey"");

                searchUsers($(""#usersearch"").val());
            }
        }
        else {
            if ($(this).val().length < 3) {
                $(""#usersearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#usersearchlbl"").css(""color"", ""dimgrey"");

                searchUsers($(""#usersearch"").val());
            }
        }
    });
    $(""#usersearch"").keyup(function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#usersearchlbl"").css(""color"", ""red"");
                searchUsers("""");
            }
            else {
                $(""#usersearchlbl"").css(""color"", ""grey"");

                searchUsers($(""#usersearch"").val());
          ");
            WriteLiteral(@"  }
        }
    });
    $(""#usersearch"").focusout(function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#usersearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#usersearchlbl"").css(""color"", ""grey"");
            }
        }
        else {
            if ($(this).val().length < 3 && $(this).val().length > 0) {
                $(""#usersearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#usersearchlbl"").css(""color"", ""dimgrey"");
            }
        }
    });
    $(""#userloadmore"").click(function () {
        $("".admin_dashboard_content_users_loadmore"").hide();
        $(""#userloading"").show();

        var url = null;
        var role = null;
        var status = null;
        var c = 10 * $(""#userspage"").val();

        if ($(""#usersearch"").val().length !== 0) {
            url = '/Admin/GetUsers?keyword=' + $(""#usersearch"").val() + '&skip=' + c;
        }
 ");
            WriteLiteral(@"       else if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !== 0) {
            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").attr('id') === ""adminfilter"") {
                role = ""Admin"";
            }
            else {
                role = ""Client"";
            }

            if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").length !== 0) {
                if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").attr('id') === ""nverifiedfilter"") {
                    status = ""Unverified"";
                    url = '/Admin/GetUsers?status=' + status + '&role=' + role + '&skip=' + c;
                }
                else if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").attr('id') === ""verifiedfilter"") {
                    status = ""Verified"";
                    url = '/Admin/GetUsers?status=' + status + '&role=' + role + '&skip=' + c;
                }
");
            WriteLiteral(@"                else if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").attr('id') === ""blacklistfilter"") {
                    status = ""Blacklisted"";
                    url = '/Admin/GetUsers?status=' + status + '&role=' + role + '&skip=' + c;
                }
                else {
                    status = ""Repeat"";
                    url = '/Admin/GetUsers?status=' + status + '&role=' + role + '&skip=' + c;
                }
            }
            else {
                url = '/Admin/GetUsers?role=' + role + '&skip=' + c;
            }
        }
        else if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").length !== 0) {
            if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").attr('id') === ""nverifiedfilter"") {
                status = ""Unverified"";
            }
            else if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").attr('id') === ""verifiedfilter"") {
     ");
            WriteLiteral(@"           status = ""Verified"";
            }
            else if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").attr('id') === ""blacklistfilter"") {
                status = ""Blacklisted"";
            }
            else {
                status = ""Repeat"";
            }

            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !== 0) {
                if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").attr('id') === ""adminfilter"") {
                    role = ""Admin"";
                    url = '/Admin/GetUsers?status=' + status + '&role=' + role + '&skip=' + c;
                }
                else {
                    role = ""Client"";
                    url = '/Admin/GetUsers?status=' + status + '&role=' + role + '&skip=' + c;
                }
            }
            else {
                url = '/Admin/GetUsers?status=' + status + '&skip=' + c;
            }
        }
        else {
           ");
            WriteLiteral(@" url = '/Admin/GetUsers?skip=' + c;
        }

        $.ajax({
            type: ""POST"",
            url: url,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                setTimeout(function () {
                    $("".admin_dashboard_content_users_users"").append(data);
                    $(""#userloading"").hide();
                    $(""#userspage"").val(parseInt($(""#userspage"").val()) + 1);

                    var calc = 10 * $(""#userspage"").val();
                    var calc1 = $(""#numofusers"").val();
                    var calc2 = $(""#userspage"").val();
                    if ($(""#numofusers"").val() > $("".admin_dashboard_content_users_users_user"").length && $("".admin_dashboard_content_users_users_user"").length >= calc) {
                        $("".admin_dashboard_content_users_loadmore"").show();
                    }
                }, 1000);
            },
            error: function (error) {");
            WriteLiteral(@"
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    });
    $(""#adminfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#nverifiedfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Admin"", ""Unverified"");
                }
                else if ($(""#verifiedfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Admin"", ""Verified"");
                }
                else if ($(""#blacklistfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Admin"", ""Blacklisted"");
                }
                else {
                    filterRoleStatus(""Admin"", ""Repeat"");
                }
            }
            else {
                filterRole(""Admin"");
            }
        }
        else {
            $(""#adminfilter"").removeClas");
            WriteLiteral(@"s(""active"");

            if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#nverifiedfilter"").hasClass(""active"")) {
                    filterStatus(""Unverified"");
                }
                else if ($(""#verifiedfilter"").hasClass(""active"")) {
                    filterStatus(""Verified"");
                }
                else if ($(""#blacklistfilter"").hasClass(""active"")) {
                    filterStatus(""Blacklisted"");
                }
                else {
                    filterStatus(""Repeat"");
                }
            }
            else {
                getAllUsers();
            }
        }
    });
    $(""#clientfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#nverifiedfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Client"", """);
            WriteLiteral(@"Unverified"");
                }
                else if ($(""#verifiedfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Client"", ""Verified"");
                }
                else if ($(""#blacklistfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Client"", ""Blacklisted"");
                }
                else {
                    filterRoleStatus(""Client"", ""Repeat"");
                }
            }
            else {
                filterRole(""Client"");
            }
        }
        else {
            $(""#clientfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_users_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#nverifiedfilter"").hasClass(""active"")) {
                    filterStatus(""Unverified"");
                }
                else if ($(""#verifiedfilter"").hasClass(""active"")) {
                    filterStatus(""Verified"");
                }
                else if ($(""#blacklistfi");
            WriteLiteral(@"lter"").hasClass(""active"")) {
                    filterStatus(""Blacklisted"");
                }
                else {
                    filterStatus(""Repeat"");
                }
            }
            else {
                getAllUsers();
            }
        }
    });
    $(""#nverifiedfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !== 0) {
                if ($(""#adminfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Admin"", ""Unverified"");
                }
                else {
                    filterRoleStatus(""Client"", ""Unverified"");
                }
            }
            else {
                filterStatus(""Unverified"");
            }
        }
        else {
            $(""#nverifiedfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !== 0) {
        ");
            WriteLiteral(@"        if ($(""#adminfilter"").hasClass(""active"")) {
                    filterRole(""Admin"");
                }
                else {
                    filterRole(""Client"");
                }
            }
            else {
                getAllUsers();
            }
        }
    });
    $(""#verifiedfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !== 0) {
                if ($(""#adminfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Admin"", ""Verified"");
                }
                else {
                    filterRoleStatus(""Client"", ""Verified"");
                }
            }
            else {
                filterStatus(""Verified"");
            }
        }
        else {
            $(""#verifiedfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !== 0) {
   ");
            WriteLiteral(@"             if ($(""#adminfilter"").hasClass(""active"")) {
                    filterRole(""Admin"");
                }
                else {
                    filterRole(""Client"");
                }
            }
            else {
                getAllUsers();
            }
        }
    });
    $(""#blacklistfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !== 0) {
                if ($(""#adminfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Admin"", ""Blacklisted"");
                }
                else {
                    filterRoleStatus(""Client"", ""Blacklisted"");
                }
            }
            else {
                filterStatus(""Blacklisted"");
            }
        }
        else {
            $(""#blacklistfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").leng");
            WriteLiteral(@"th !== 0) {
                if ($(""#adminfilter"").hasClass(""active"")) {
                    filterRole(""Admin"");
                }
                else {
                    filterRole(""Client"");
                }
            }
            else {
                getAllUsers();
            }
        }
    });
    $(""#repeatfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !== 0) {
                if ($(""#adminfilter"").hasClass(""active"")) {
                    filterRoleStatus(""Admin"", ""Repeat"");
                }
                else {
                    filterRoleStatus(""Client"", ""Repeat"");
                }
            }
            else {
                filterStatus(""Repeat"");
            }
        }
        else {
            $(""#repeatfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_users_filter_role"").find(""button.active"").length !=");
            WriteLiteral(@"= 0) {
                if ($(""#adminfilter"").hasClass(""active"")) {
                    filterRole(""Admin"");
                }
                else {
                    filterRole(""Client"");
                }
            }
            else {
                getAllUsers();
            }
        }
    });

    //User Actions
    function updateUserDetails(id, usernum) {
        $.ajax({
            type: ""POST"",
            url: '/Admin/GetUpdatedUserDetails?id=' + id + '&index=' + usernum,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $("".admin_dashboard_content_users_users_user."" + usernum).empty();
                $("".admin_dashboard_content_users_users_user."" + usernum).append(data);
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }

    function removeBla");
            WriteLiteral(@"cklist(id, usernum) {
        $.ajax({
            type: ""POST"",
            url: '/Admin/RemoveBlacklist?id=' + id,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                if (data == ""Success"") {
                    updateUserDetails(id, usernum);
                    alert(""Successfully removed user #"" + id + "" from blacklist"");
                }
                else {
                    alert(""Error while updating"");
                }
            },
            error: function () {
                alert(""Error while updating"");
            }
        });
    }

    function toggleAdminPriviledge(id, usernum) {
        $.ajax({
            type: ""POST"",
            url: '/Admin/ToggleAdminPriviledge?id=' + id,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                if (data.includes(""Success"")) {
       ");
            WriteLiteral(@"             updateUserDetails(id, usernum);

                    if (data.includes(""Admin"")) {
                        alert(""Successfully granted admin privileges for user #"" + id);
                    }
                    else {
                        alert(""Successfully revoked admin privileges from user #"" + id);
                    }
                }
                else {
                    alert(""Error while updating"");
                }
            },
            error: function () {
                alert(""Error while updating"");
            }
        });
    }

    function removeUser(id) {
        var confirmation = confirm(""Are you sure you want to remove user# "" + id + "" ?"");

        if (confirmation == true) {
            $.ajax({
                type: ""POST"",
                url: '/Admin/RemoveUser?id=' + id,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function (data) {
             ");
            WriteLiteral(@"       if (data == ""Success"") {
                        alert(""Successfully removed user #"" + id);
                    }
                    else if (data == ""Failure"") {
                        alert(""Error while removing user"");
                    }
                    else if (data == ""Active"") {
                        alert(""Unable to remove user due to active bookings"");
                    }
                    else {
                        alert(""Error while removing user"");
                    }
                },
                error: function () {
                    alert(""Error while removing user"");
                }
            });
        }
    }

    function enableAddAdmin() {
        $(""#useroverlay"").addClass(""active"");
        $(""#addadminoverlay"").addClass(""active"");
        $(""#addadminoverlay input"").val("""");
    }

    function closeAddAdmin() {
        $(""#useroverlay"").removeClass(""active"");
        $(""#addadminoverlay"").removeClass(""active"");
    }
");
            WriteLiteral(@"
    function addAdmin() {
        var decimal = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;
        var name = $(""#adminname"").val();
        var email = $(""#adminemail"").val();
        var phone = $(""#adminphone"").val();
        var password = $(""#adminpwd"").val();

        $("".admin_dashboard_content_users_popup_addadmin_content_form_name"").css(""border"", ""2px solid gray"");
        $("".admin_dashboard_content_users_popup_addadmin_content_form_email"").css(""border"", ""2px solid gray"");
        $("".admin_dashboard_content_users_popup_addadmin_content_form_phone"").css(""border"", ""2px solid gray"");
        $("".admin_dashboard_content_users_popup_addadmin_content_form_pwd"").css(""border"", ""2px solid gray"");

        if (name != """" && email != """" && phone != """" && password != """") {
            $.ajax({
                type: ""POST"",
                url: '/User/CheckEmailPhone?email=' + email + ""&phone="" + phone,
                dataType: ""json"",
                async: false,
                contentTy");
            WriteLiteral(@"pe: ""application/json; charset=utf-8"",
                success: function (data) {
                    if (data == ""notavailableemail"") {
                        $("".admin_dashboard_content_users_popup_addadmin_content_form_email"").css(""border"", ""2px solid red"");
                        alert(""The e-mail address you entered is registered with the system. Please enter a valid e-mail address."");
                    }
                    else if (data == ""notavailablephone"") {
                        $("".admin_dashboard_content_users_popup_addadmin_content_form_phone"").css(""border"", ""2px solid red"");
                        alert(""The contact number you entered is registered with the system. Please enter a valid contact number."");
                    }
                    else if (data == ""notavailableemailphone"") {
                        $("".admin_dashboard_content_users_popup_addadmin_content_form_email"").css(""border"", ""2px solid red"");
                        $("".admin_dashboard_content_users_popu");
            WriteLiteral(@"p_addadmin_content_form_phone"").css(""border"", ""2px solid red"");
                        alert(""The e-mail address and contact number you entered are registered with the system. Please enter a valid e-mail address and contact number."");
                    }
                    else {
                        if (String(password).match(decimal)) {
                            $.ajax({
                                type: ""POST"",
                                url: '/Admin/AddAdmin?name=' + name + '&email=' + email + '&phone=' + phone + '&pwd=' + password,
                                dataType: ""json"",
                                contentType: ""application/json; charset=utf-8"",
                                success: function (data) {
                                    if (data == ""Success"") {
                                        closeAddAdmin();
                                        $("".admin_dashboard_content_users_filter button"").removeClass(""active"");
                             ");
            WriteLiteral(@"           getAllUsers();
                                        alert(""Administrator account created successfully!"");
                                    }
                                    else {
                                        alert(""Error while creating admin"");
                                    }
                                },
                                error: function () {
                                    alert(""Error while creating admin"");
                                }
                            });
                        }
                        else {
                            $("".admin_dashboard_content_users_popup_addadmin_content_form_pwd"").css(""border"", ""2px solid red"");
                            alert(""Password does not meet requirements (Uppercase and lowercase alphabet(s), number(s) and at least 6 characters). Please enter a valid password."");
                        }
                    }
                },
                error: functio");
            WriteLiteral(@"n (error) {
                console.log(error);
                alert(""Something went wrong"");
            }
            });
        }
        else {
            $("".admin_dashboard_content_users_popup_addadmin_content_form_name"").css(""border"", ""2px solid red"");
            $("".admin_dashboard_content_users_popup_addadmin_content_form_email"").css(""border"", ""2px solid red"");
            $("".admin_dashboard_content_users_popup_addadmin_content_form_phone"").css(""border"", ""2px solid red"");
            $("".admin_dashboard_content_users_popup_addadmin_content_form_pwd"").css(""border"", ""2px solid red"");
            alert(""All fields are required!"");
        }
    }

    function userEdit(id, str, usernum) {
        $.ajax({
            type: ""POST"",
            url: '/Admin/GetEditUserDetails?id=' + id + '&index=' + usernum,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#userdetailsoverlay"").rem");
            WriteLiteral(@"ove();
                $("".admin_dashboard_content_users_popup"").append(data);

                $(""#usereditname"").prop(""disabled"", ""true"");
                $(""#usereditemail"").prop(""disabled"", ""true"");
                $(""#usereditnum"").prop(""disabled"", ""true"");
                $("".admin_dashboard_content_users_popup_overlay_content_info_editbtns"").prop(""hidden"", ""true"");

                $(""#useroverlay"").addClass(""active"");
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }

    function showLicense() {
        if($(""#additionalimg"").is("":visible""))
        {
            $(""#additionalimg"").prop(""hidden"", true);
            $(""#licenseimg"").prop(""hidden"", false);
            $(""#userlicensebtn"").html(""Hide License"");
            $(""#useradditionalbtn"").html(""View Additional Identification"");
        }
        else
        {
            if($(""#licenseimg"").is(");
            WriteLiteral(@""":visible""))
            {
                $(""#licenseimg"").prop(""hidden"", true);
            $(""#userlicensebtn"").html(""View License"");
            }
            else
            {
                $(""#licenseimg"").prop(""hidden"", false);
            $(""#userlicensebtn"").html(""Hide License"");
            }
        }
    }

    function showAdditional() {
        if($(""#licenseimg"").is("":visible""))
        {
            $(""#licenseimg"").prop(""hidden"", true);
            $(""#additionalimg"").prop(""hidden"", false);
            $(""#userlicensebtn"").html(""View License"");
            $(""#useradditionalbtn"").html(""Hide Additional Identification"");
        }
        else
        {
            if($(""#additionalimg"").is("":visible""))
            {
                $(""#additionalimg"").prop(""hidden"", true);
                $(""#useradditionalbtn"").html(""View Additional Identification"");
            }
            else
            {
                $(""#additionalimg"").prop(""hidden"", false);
      ");
            WriteLiteral(@"          $(""#useradditionalbtn"").html(""Hide Additional Identification"");
            }
        }
    }

    function closeUserOverlay() {
        $(""#useroverlay"").removeClass(""active"");
        $(""#userdetailsoverlay"").remove();
    }

    function cancelUserEdit() {
        $(""#usereditname"").prop(""disabled"", true);
        $(""#usereditemail"").prop(""disabled"", true);
        $(""#usereditnum"").prop(""disabled"", true);
        $(""#usereditname"").val($(""#usereditnamehid"").html());
        $(""#usereditemail"").val($(""#usereditemailhid"").html());
        $(""#usereditnum"").val($(""#usereditnumhid"").html());
        $("".admin_dashboard_content_users_popup_overlay_content_info_btns"").prop(""hidden"", false);
        $("".admin_dashboard_content_users_popup_overlay_content_info_editbtns"").prop(""hidden"", true);
    }


    //Booking Actions
    function bookingEdit(id, str, bookingnum) {
        if (str == 1) {
            $.ajax({
                type: ""POST"",
                url: '/Admin/GetEd");
            WriteLiteral(@"itBookingDetails?id=' + id + '&index=' + bookingnum,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function (data) {
                    $(""#bookingdetailsoverlay"").remove();
                    $("".admin_dashboard_content_bookings_popup"").append(data);

                    
                    $("".admin_dashboard_content_bookings_popup_overlay_content_info_editbtns"").prop(""hidden"", ""true"");

                    $(""#bookingoverlay"").addClass(""active"");
                },
                error: function (error) {
                                alert(""Error while retrieving data"");
                                console.log(error);
                            }
            });
        }
        else  {
            $.ajax({
                type: ""POST"",
                url: '/Admin/GetEditBookingDetails?id=' + id + '&index=' + bookingnum,
                dataType: ""json"",
                contentType: ""applicatio");
            WriteLiteral(@"n/json; charset=utf-8"",
                success: function (data) {
                    $(""#bookingdetailsoverlay"").remove();
                    $("".admin_dashboard_content_bookings_popup"").append(data);


                    $("".admin_dashboard_content_bookings_popup_overlay_content_info_editbtns"").prop(""hidden"", ""true"");

                    $(""#bookingoverlay"").addClass(""active"");
                },
                error: function (error) {
                                alert(""Error while retrieving data"");
                                console.log(error);
                            }
            });
        }
    }

    function closeBookingOverlay() {
        $(""#bookingoverlay"").removeClass(""active"");
        $(""#bookingdetailsoverlay"").remove();
    }

    function cancelBookingEdit() {
        
        $("".admin_dashboard_content_bookings_popup_overlay_content_info_btns"").prop(""hidden"", false);
        $("".admin_dashboard_content_bookings_popup_overlay_content_info_editb");
            WriteLiteral(@"tns"").prop(""hidden"", true);
    }


    //Vehicle Actions
    $(""#vehiclesearch"").on(""input"", function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
                searchVehicles("""");
            }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""grey"");

                searchVehicles($(""#vehiclesearch"").val());
            }
        }
        else {
            if ($(this).val().length < 3) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""dimgrey"");

                searchVehicles($(""#vehiclesearch"").val());
            }
        }
    });
    $(""#vehiclesearch"").keyup(function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
                searchVehicles("""");
           ");
            WriteLiteral(@" }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""grey"");

                searchVehicles($(""#vehiclesearch"").val());
            }
        }
    });
    $(""#vehiclesearch"").focusout(function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""grey"");
            }
        }
        else {
            if ($(this).val().length < 3 && $(this).val().length > 0) {
                $(""#vehiclesearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#vehiclesearchlbl"").css(""color"", ""dimgrey"");
            }
        }
    });
    $(""#vehicleloadmore"").click(function () {
        $("".admin_dashboard_content_vehicles_loadmore"").hide();
        $(""#vehicleloading"").show();

        var url = null;
        var type = null;
        var status = null;
        var c = ");
            WriteLiteral(@"10 * $(""#vehiclespage"").val();

        if ($(""#vehiclesearch"").val().length !== 0) {
            url = '/Admin/GetVehicles?keyword=' + $(""#vehiclesearch"").val() + '&skip=' + c;
        }
        else if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0 || $("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").length !== 0) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").attr('id') === ""availablefilter"") {
                    status = ""Available"";
                }
                else {
                    status = ""Booked"";
                }
            }

            if ($("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").length !== 0) {
                if ($("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").attr('id') === ""compactfilter"") ");
            WriteLiteral(@"{
                    type = ""Compact"";
                }
                else if ($("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").attr('id') === ""luxuryfilter"") {
                    type = ""Luxury"";
                }
                else if ($("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").attr('id') === ""offroadfilter"") {
                    type = ""Offroad"";
                }
                else if ($("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").attr('id') === ""sedanfilter"") {
                    type = ""Sedan"";
                }
                else if ($("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").attr('id') === ""sportsfilter"") {
                    type = ""Sports"";
                }
                else if ($("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").attr('id') === ""suvfilter"") {
                    type = ""SUV"";
                }
                else if ");
            WriteLiteral(@"($("".admin_dashboard_content_vehicles_filter_type"").find(""button.active"").attr('id') === ""vanfilter"") {
                    type = ""Van"";
                }
                else {
                    type = ""Wagon"";
                }
            }
            
            if (status !== null && type !== null) {
                url = '/Admin/GetVehicles?status=' + status + '&type=' + type + '&skip=' + c;
            }
            else if (status !== null) {
                url = '/Admin/GetVehicles?status=' + status + '&skip=' + c;
            }
            else {
                url = '/Admin/GetVehicles?type=' + type + '&skip=' + c;
            }
        }
        else {
            url = '/Admin/GetVehicles?skip=' + c;
        }

        $.ajax({
            type: ""POST"",
            url: url,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                setTimeout(function () {
                   ");
            WriteLiteral(@" $("".admin_dashboard_content_vehicles_vehicles_table tbody"").append(data);
                    $(""#vehicleloading"").hide();
                    $(""#vehiclespage"").val(parseInt($(""#vehiclespage"").val()) + 1);

                    var calc = 10 * $(""#vehiclespage"").val();
                    var calc1 = $(""#numofvehicles"").val();
                    var calc2 = $(""#vehiclespage"").val();
                    if ($(""#numofvehicles"").val() > $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length && $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length >= calc) {
                        $("".admin_dashboard_content_vehicles_loadmore"").show();
                    }
                }, 1000);
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    });
    $(""#availablefilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if (");
            WriteLiteral(@"$("".admin_dashboard_content_vehicles_filter_type"").length !== 0) {
                if ($(""#compactfilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Compact"");
                }
                else if ($(""#luxuryfilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Luxury"");
                }
                else if ($(""#offroadfilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Offroad"");
                }
                else if ($(""#sedanfilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Sedan"");
                }
                else if ($(""#sportsfilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Sports"");
                }
                else if ($(""#suvfilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""SUV"");
                }
                else if ($(""#vanfilter"").hasClass(""active"")) {
             ");
            WriteLiteral(@"       filterStatusType(""Available"", ""Van"");
                }
                else {
                    filterStatusType(""Available"", ""Wagon"");
                }
            }
            else {
                filterVehicleStatus(""Available"");
            }
        }
        else {
            $(""#availablefilter"").removeClass(""active"");
            
            if ($("".admin_dashboard_content_vehicles_filter_type"").length !== 0) {
                if ($(""#compactfilter"").hasClass(""active"")) {
                    filterType(""Compact"");
                }
                else if ($(""#luxuryfilter"").hasClass(""active"")) {
                    filterType(""Luxury"");
                }
                else if ($(""#offroadfilter"").hasClass(""active"")) {
                    filterType(""Offroad"");
                }
                else if ($(""#sedanfilter"").hasClass(""active"")) {
                    filterType(""Sedan"");
                }
                else if ($(""#sportsfilter"").hasClass(""acti");
            WriteLiteral(@"ve"")) {
                    filterType(""Sports"");
                }
                else if ($(""#suvfilter"").hasClass(""active"")) {
                    filterType(""SUV"");
                }
                else if ($(""#vanfilter"").hasClass(""active"")) {
                    filterType(""Van"");
                }
                else {
                    filterType(""Wagon"");
                }
            }
            else {
                getAllVehicles();
            }
        }
    });
    $(""#bookedfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_type"").length !== 0) {
                if ($(""#compactfilter"").hasClass(""active"")) {
                    filterStatusType(""Booked"", ""Compact"");
                }
                else if ($(""#luxuryfilter"").hasClass(""active"")) {
                    filterStatusType(""Booked"", ""Luxury"");
                }
                else if ($(""#offroadfilter"").hasClass(""act");
            WriteLiteral(@"ive"")) {
                    filterStatusType(""Booked"", ""Offroad"");
                }
                else if ($(""#sedanfilter"").hasClass(""active"")) {
                    filterStatusType(""Booked"", ""Sedan"");
                }
                else if ($(""#sportsfilter"").hasClass(""active"")) {
                    filterStatusType(""Booked"", ""Sports"");
                }
                else if ($(""#suvfilter"").hasClass(""active"")) {
                    filterStatusType(""Booked"", ""SUV"");
                }
                else if ($(""#vanfilter"").hasClass(""active"")) {
                    filterStatusType(""Booked"", ""Van"");
                }
                else {
                    filterStatusType(""Booked"", ""Wagon"");
                }
            }
            else {
                filterVehicleStatus(""Booked"");
            }
        }
        else {
            $(""#bookedfilter"").removeClass(""active"");
            
            if ($("".admin_dashboard_content_vehicles_filter_type"").length ");
            WriteLiteral(@"!== 0) {
                if ($(""#compactfilter"").hasClass(""active"")) {
                    filterType(""Compact"");
                }
                else if ($(""#luxuryfilter"").hasClass(""active"")) {
                    filterType(""Luxury"");
                }
                else if ($(""#offroadfilter"").hasClass(""active"")) {
                    filterType(""Offroad"");
                }
                else if ($(""#sedanfilter"").hasClass(""active"")) {
                    filterType(""Sedan"");
                }
                else if ($(""#sportsfilter"").hasClass(""active"")) {
                    filterType(""Sports"");
                }
                else if ($(""#suvfilter"").hasClass(""active"")) {
                    filterType(""SUV"");
                }
                else if ($(""#vanfilter"").hasClass(""active"")) {
                    filterType(""Van"");
                }
                else {
                    filterType(""Wagon"");
                }
            }
            else {
      ");
            WriteLiteral(@"          getAllVehicles();
            }
        }
    });
    $(""#compactfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Compact"");
                }
                else {
                    filterStatusType(""Booked"", ""Compact"");
                }
            }
            else {
                filterType(""Compact"");
            }
        }
        else {
            $(""#compactfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatus(""Available"");
                }
                else {
                    filterStatus(""Booked"");
                }
          ");
            WriteLiteral(@"  }
            else {
                getAllVehicles();
            }
        }
    });
    $(""#luxuryfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Luxury"");
                }
                else {
                    filterStatusType(""Booked"", ""Luxury"");
                }
            }
            else {
                filterType(""Luxury"");
            }
        }
        else {
            $(""#luxuryfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatus(""Available"");
                }
                else {
                    filterStatus(""Booked"");
   ");
            WriteLiteral(@"             }
            }
            else {
                getAllVehicles();
            }
        }
    });
    $(""#offroadfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Offroad"");
                }
                else {
                    filterStatusType(""Booked"", ""Offroad"");
                }
            }
            else {
                filterType(""Offroad"");
            }
        }
        else {
            $(""#offroadfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatus(""Available"");
                }
                else {
                 ");
            WriteLiteral(@"   filterStatus(""Booked"");
                }
            }
            else {
                getAllVehicles();
            }
        }
    });
    $(""#sedanfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Sedan"");
                }
                else {
                    filterStatusType(""Booked"", ""Sedan"");
                }
            }
            else {
                filterType(""Sedan"");
            }
        }
        else {
            $(""#sedanfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatus(""Available"");
                }
                else");
            WriteLiteral(@" {
                    filterStatus(""Booked"");
                }
            }
            else {
                getAllVehicles();
            }
        }
    });
    $(""#sportsfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Sports"");
                }
                else {
                    filterStatusType(""Booked"", ""Sports"");
                }
            }
            else {
                filterType(""Sports"");
            }
        }
        else {
            $(""#sportsfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatus(""Available"");
             ");
            WriteLiteral(@"   }
                else {
                    filterStatus(""Booked"");
                }
            }
            else {
                getAllVehicles();
            }
        }
    });
    $(""#suvfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""SUV"");
                }
                else {
                    filterStatusType(""Booked"", ""SUV"");
                }
            }
            else {
                filterType(""SUV"");
            }
        }
        else {
            $(""#suvfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatus(""Available"");
  ");
            WriteLiteral(@"              }
                else {
                    filterStatus(""Booked"");
                }
            }
            else {
                getAllVehicles();
            }
        }
    });
    $(""#vanfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Van"");
                }
                else {
                    filterStatusType(""Booked"", ""Van"");
                }
            }
            else {
                filterType(""Van"");
            }
        }
        else {
            $(""#vanfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatus(""Avail");
            WriteLiteral(@"able"");
                }
                else {
                    filterStatus(""Booked"");
                }
            }
            else {
                getAllVehicles();
            }
        }
    });
    $(""#wagonfilter"").click(function () {
        if (!$(this).hasClass(""active"")) {
            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                    filterStatusType(""Available"", ""Wagon"");
                }
                else {
                    filterStatusType(""Booked"", ""Wagon"");
                }
            }
            else {
                filterType(""Wagon"");
            }
        }
        else {
            $(""#wagonfilter"").removeClass(""active"");

            if ($("".admin_dashboard_content_vehicles_filter_status"").find(""button.active"").length !== 0) {
                if ($(""#availablefilter"").hasClass(""active"")) {
                  ");
            WriteLiteral(@"  filterStatus(""Available"");
                }
                else {
                    filterStatus(""Booked"");
                }
            }
            else {
                getAllVehicles();
            }
        }
    });

    function filterStatusType(status, type) {
        $("".admin_dashboard_content_vehicles_loadmore"").hide();
        $(""#vehiclesempty"").hide();

        if ($(""#vehiclesearch"").val().length !== 0) {
            $(""#vehiclesearch"").val("""")
        }

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetVehicles?status=' + status + '&type=' + type,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#vehicletoploading"").show();

                if (data[0] != 0) {
                    $(""#vehiclespage"").val(0);
                    $(""#numofvehicles"").val(data[0]);
                    delete data[0];

                    $("".admin_dashboar");
            WriteLiteral(@"d_content_vehicles_filter_type button"").removeClass(""active"");
                    $("".admin_dashboard_content_vehicles_filter_status button"").removeClass(""active"");

                    if (status == ""Available"") {
                        $(""#availablefilter"").addClass(""active"");
                    }
                    else {
                        $(""#bookedfilter"").addClass(""active"");
                    }
                    if (type == ""Compact"") {
                        $(""#compactfilter"").addClass(""active"");
                    }
                    else if (type == ""Luxury"") {
                        $(""#luxuryfilter"").addClass(""active"");
                    }
                    else if (type == ""Offroad"") {
                        $(""#offroadfilter"").addClass(""active"");
                    }
                    else if (type == ""Sedan"") {
                        $(""#sedanfilter"").addClass(""active"");
                    }
                    else if (type == ""Sports"") {
    ");
            WriteLiteral(@"                    $(""#sportsfilter"").addClass(""active"");
                    }
                    else if (type == ""SUV"") {
                        $(""#suvfilter"").addClass(""active"");
                    }
                    else if (type == ""Van"") {
                        $(""#vanfilter"").addClass(""active"");
                    }
                    else {
                        $(""#wagonfilter"").addClass(""active"");
                    }

                    setTimeout(function () {
                        $(""#vehicletoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").append(data);

                            $(""#vehiclespage"").val(parseInt($(""#vehiclespage"").val()) + 1);

                            var calc = 10 * $(""#vehiclespage"").val();
                            if ($(""#numo");
            WriteLiteral(@"fvehicles"").val() > $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length && $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length >= calc) {
                                $("".admin_dashboard_content_vehicles_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                            $(""#vehiclesempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }
    function filterType(type) {
        $("".admin_dashboard_content_vehicles_loadmore"").hide();
        $(""#vehiclesempty"").hide();

        if ($(""#vehiclesearch"").val().length !== 0) {
            $(""#vehiclesearch"").val("""")
        }

        $.");
            WriteLiteral(@"ajax({
            type: ""POST"",
            url: '/Admin/GetVehicles?type=' + type,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#vehicletoploading"").show();

                if (data[0] != 0) {
                    $(""#vehiclespage"").val(0);
                    $(""#numofvehicles"").val(data[0]);
                    delete data[0];

                    $("".admin_dashboard_content_vehicles_filter_type button"").removeClass(""active"");

                    if (type == ""Compact"") {
                        $(""#compactfilter"").addClass(""active"");
                    }
                    else if (type == ""Luxury"") {
                        $(""#luxuryfilter"").addClass(""active"");
                    }
                    else if (type == ""Offroad"") {
                        $(""#offroadfilter"").addClass(""active"");
                    }
                    else if (type == ""Sedan"") {
           ");
            WriteLiteral(@"             $(""#sedanfilter"").addClass(""active"");
                    }
                    else if (type == ""Sports"") {
                        $(""#sportsfilter"").addClass(""active"");
                    }
                    else if (type == ""SUV"") {
                        $(""#suvfilter"").addClass(""active"");
                    }
                    else if (type == ""Van"") {
                        $(""#vanfilter"").addClass(""active"");
                    }
                    else {
                        $(""#wagonfilter"").addClass(""active"");
                    }

                    setTimeout(function () {
                        $(""#vehicletoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").append(data);

                            $(""#vehiclespage"").val(parseInt($(""#vehiclespage""");
            WriteLiteral(@").val()) + 1);

                            var calc = 10 * $(""#vehiclespage"").val();
                            if ($(""#numofvehicles"").val() > $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length && $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length >= calc) {
                                $("".admin_dashboard_content_vehicles_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                            $(""#vehiclesempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }
    function filterVehicleStatus(status) {
        $("".admin_dashboard_content_vehicles_loadmore"").hide();
        $(""#vehicl");
            WriteLiteral(@"esempty"").hide();

        if ($(""#vehiclesearch"").val().length !== 0) {
            $(""#vehiclesearch"").val("""")
        }

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetVehicles?status=' + status,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#vehicletoploading"").show();

                if (data[0] != 0) {
                    $(""#vehiclespage"").val(0);
                    $(""#numofvehicles"").val(data[0]);
                    delete data[0];

                    $("".admin_dashboard_content_vehicles_filter_status button"").removeClass(""active"");

                    if (status == ""Available"") {
                        $(""#availablefilter"").addClass(""active"");
                    }
                    else {
                        $(""#bookedfilter"").addClass(""active"");
                    }

                    setTimeout(function () {
                     ");
            WriteLiteral(@"   $(""#vehicletoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").append(data);

                            $(""#vehiclespage"").val(parseInt($(""#vehiclespage"").val()) + 1);

                            var calc = 10 * $(""#vehiclespage"").val();
                            if ($(""#numofvehicles"").val() > $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length && $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length >= calc) {
                                $("".admin_dashboard_content_vehicles_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                            $(""#vehiclesempty"").show();
                   ");
            WriteLiteral(@"     }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }
    function getAllVehicles() {
        $("".admin_dashboard_content_vehicles_loadmore"").hide();
        $(""#vehiclesempty"").hide();

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetVehicles',
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#vehicletoploading"").show();

                if (data[0] != 0) {
                    $(""#vehiclespage"").val(0);
                    $(""#numofvehicles"").val(data[0]);
                    delete data[0];

                    setTimeout(function () {
                        $(""#vehicletoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboar");
            WriteLiteral(@"d_content_vehicles_vehicles_table tbody"").empty();
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").append(data);

                            $(""#vehiclespage"").val(parseInt($(""#vehiclespage"").val()) + 1);

                            var calc = 10 * $(""#vehiclespage"").val();
                            if ($(""#numofvehicles"").val() > $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length && $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length >= calc) {
                                $("".admin_dashboard_content_vehicles_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                            $(""#vehiclesempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                cons");
            WriteLiteral(@"ole.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }
    function searchVehicles(keyword) {
        $("".admin_dashboard_content_vehicles_loadmore"").hide();
        $(""#vehiclesempty"").hide();

        $("".admin_dashboard_content_vehicles_filter_type button"").removeClass(""active"");
        $("".admin_dashboard_content_vehicles_filter_status button"").removeClass(""active"");

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetVehicles?keyword=' + keyword,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                if (data[0] != 0) {
                    $(""#vehiclespage"").val(0);
                    $(""#numofvehicles"").val(data[0]);
                    delete data[0];

                        if (data.length != 0) {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                           ");
            WriteLiteral(@" $("".admin_dashboard_content_vehicles_vehicles_table tbody"").append(data);

                            $(""#vehiclespage"").val(parseInt($(""#vehiclespage"").val()) + 1);

                            var calc = 10 * $(""#vehiclespage"").val();
                            if ($(""#numofvehicles"").val() > $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length && $("".admin_dashboard_content_vehicles_vehicles_table tbody tr"").length >= calc) {
                                $("".admin_dashboard_content_vehicles_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_vehicles_vehicles_table tbody"").empty();
                            $(""#vehiclesempty"").show();
                        }
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }

 ");
            WriteLiteral(@"   function enableAddVehicle() {
        $(""#vehicleoverlay"").addClass(""active"");
        $(""#addvehicleoverlay"").addClass(""active"");
        $(""#addvehicleoverlay input"").val("""");
    }

    function closeAddVehicle() {
        $(""#vehicleoverlay"").removeClass(""active"");
        $(""#addvehicleoverlay"").removeClass(""active"");
    }

    function addVehicle() {
        var manufacturer = $(""#vehiclemanufacturer"").val();
        var model = $(""#vehiclemodel"").val();
        var year = $(""#vehicleyear"").val();
        var color = $(""#vehiclecolor"").val();
        var category = $(""#vehiclecategory"").find("":selected"").text();
        var fueltype = $(""#vehiclefueltype"").find("":selected"").text();
        var plate = $(""#vehicleplate"").val();
        var rate = $(""#vehiclerate"").val();
        var vehicleimage = $('#vehicleimage')[0].files[0];
        let formData = new FormData()

        formData.append('manufacturer', manufacturer);
        formData.append('model', model);
        formDa");
            WriteLiteral(@"ta.append('year', year);
        formData.append('color', color);
        formData.append('category', category);
        formData.append('fuelType', fueltype);
        formData.append('plate', plate);
        formData.append('rate', rate);
        formData.append('imageFile', vehicleimage);

        console.log(formData);

        $(""#vehiclemanufacturer"").css(""border"", ""2px solid gray"");
        $(""#vehiclemodel"").css(""border"", ""2px solid gray"");
        $(""#vehicleyear"").css(""border"", ""2px solid gray"");
        $(""#vehiclecolor"").css(""border"", ""2px solid gray"");
        $(""#vehiclecategory"").css(""border"", ""2px solid gray"");
        $(""#vehiclefueltype"").css(""border"", ""2px solid gray"");
        $(""#vehicleplate"").css(""border"", ""2px solid gray""); 
        $(""#vehiclerate"").css(""border"", ""2px solid gray"");

        if (manufacturer != """" && model != """" && year != """" && color != """" && category != """" && fueltype != """" && plate != """" && rate != """") {
            $.ajax({
                type:");
            WriteLiteral(@" ""POST"",
                url: '/Admin/CheckPlate?plate=' + plate,
                dataType: ""json"",
                async: false,
                contentType: ""application/json; charset=utf-8"",
                success: function (data) {
                    if (data == ""Failure"") {
                        $(""#vehicleplate"").css(""border"", ""2px solid red"");
                        alert(""This plate number already exists."");
                    }
                    else {
                        $.ajax({
                            url : '/Admin/AddVehicle',
                            type: 'POST',
                            dataType: 'json',
                            data: formData,
                            processData: false,
                            contentType: false,
                            success: function (data) {
                                    if (data == ""Success"") {
                                        closeAddVehicle();
                                      ");
            WriteLiteral(@"  $("".admin_dashboard_content_vehicles_filter button"").removeClass(""active"");
                                        getAllVehicles();
                                        alert(""Vehicle created successfully!"");
                                    }
                                    else {
                                        alert(""Error while creating vehicle"");
                                    }
                                },
                            error: function () {
                                alert(""Error while creating vehicle"");
                            }
                        }).done(function(response) {
                            console.log(response);
                        });
                    }
                },
                error: function (error) {
                    console.log(error);
                    alert(""Something went wrong"");
                }
            });
        }
        else {
            $(""#vehiclemanufacturer"")");
            WriteLiteral(@".css(""border"", ""2px solid red"");
            $(""#vehiclemodel"").css(""border"", ""2px solid red"");
            $(""#vehicleyear"").css(""border"", ""2px solid red"");
            $(""#vehiclecolor"").css(""border"", ""2px solid red"");
            $(""#vehiclecategory"").css(""border"", ""2px solid red"");
            $(""#vehiclefueltype"").css(""border"", ""2px solid red"");
            $(""#vehicleplate"").css(""border"", ""2px solid red"");
            $(""#vehiclerate"").css(""border"", ""2px solid red"");
            alert(""All fields are required!"");
        }
    }

    function vehicleEdit(id, str, vehiclenum) {
        if (str == 1) {
            $.ajax({
                type: ""POST"",
                url: '/Admin/GetEditVehicleDetails?id=' + id + '&index=' + vehiclenum,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function (data) {
                    $(""#vehicledetailsoverlay"").remove();
                    $("".admin_dashboard_content_vehi");
            WriteLiteral(@"cles_popup"").append(data);

                    
                    $("".admin_dashboard_content_vehicles_popup_overlay_content_info_editbtns"").prop(""hidden"", ""true"");

                    $(""#vehicleoverlay"").addClass(""active"");
                },
                error: function (error) {
                                alert(""Error while retrieving data"");
                                console.log(error);
                            }
            });
        }
        else  {
            $.ajax({
                type: ""POST"",
                url: '/Admin/GetEditVehicleDetails?id=' + id + '&index=' + vehiclenum,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function (data) {
                    $(""#vehicledetailsoverlay"").remove();
                    $("".admin_dashboard_content_vehicles_popup"").append(data);


                    $("".admin_dashboard_content_vehicles_popup_overlay_content_info_editbtns"").pr");
            WriteLiteral(@"op(""hidden"", ""true"");

                    $(""#vehicleoverlay"").addClass(""active"");
                },
                error: function (error) {
                                alert(""Error while retrieving data"");
                                console.log(error);
                            }
            });
        }
    }

    function closeVehicleOverlay() {
        $(""#vehicleoverlay"").removeClass(""active"");
        $(""#vehicledetailsoverlay"").remove();
    }

    function cancelVehicleEdit() {
        
        $("".admin_dashboard_content_vehicles_popup_overlay_content_info_btns"").prop(""hidden"", false);
        $("".admin_dashboard_content_vehicles_popup_overlay_content_info_editbtns"").prop(""hidden"", true);
    }


    //Equipment Actions
    $(""#equipmentsearch"").on(""input"", function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#equipmentsearchlbl"").css(""color"", ""red"");
                searchEquipment("""");
            }");
            WriteLiteral(@"
            else {
                $(""#equipmentsearchlbl"").css(""color"", ""grey"");

                searchEquipment($(""#equipmentsearch"").val());
            }
        }
        else {
            if ($(this).val().length < 3) {
                $(""#equipmentsearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#equipmentsearchlbl"").css(""color"", ""dimgrey"");

                searchEquipment($(""#equipmentsearch"").val());
            }
        }
    });
    $(""#equipmentsearch"").keyup(function (e) {
        if (e.keyCode == 8) {
            if ($(this).val().length < 3) {
                $(""#equipmentsearchlbl"").css(""color"", ""red"");
                searchEquipment("""");
            }
            else {
                $(""#equipmentsearchlbl"").css(""color"", ""grey"");

                searchEquipment($(""#equipmentsearch"").val());
            }
        }
    });
    $(""#equipmentsearch"").focusout(function (e) {
        if (e.keyCode == 8) {
            if ");
            WriteLiteral(@"($(this).val().length < 3) {
                $(""#equipmentsearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#equipmentsearchlbl"").css(""color"", ""grey"");
            }
        }
        else {
            if ($(this).val().length < 3 && $(this).val().length > 0) {
                $(""#equipmentsearchlbl"").css(""color"", ""red"");
            }
            else {
                $(""#equipmentsearchlbl"").css(""color"", ""dimgrey"");
            }
        }
    });
    $(""#equipmentloadmore"").click(function () {
        $("".admin_dashboard_content_equipment_loadmore"").hide();
        $(""#equipmentloading"").show();

        var url = null;
        var type = null;
        var status = null;
        var c = 10 * $(""#equipmentpage"").val();

        if ($(""#equipmentsearch"").val().length !== 0) {
            url = '/Admin/GetEquipment?keyword=' + $(""#equipmentsearch"").val() + '&skip=' + c;
        }
        else {
            url = '/Admin/GetEquipment?skip=' + c;");
            WriteLiteral(@"
        }

        $.ajax({
            type: ""POST"",
            url: url,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                setTimeout(function () {
                    $("".admin_dashboard_content_equipment_equipment_table tbody"").append(data);
                    $(""#equipmentloading"").hide();
                    $(""#equipmentpage"").val(parseInt($(""#equipmentpage"").val()) + 1);

                    var calc = 10 * $(""#equipmentpage"").val();
                    var calc1 = $(""#numofequipment"").val();
                    var calc2 = $(""#equipmentpage"").val();
                    if ($(""#numofequipment"").val() > $("".admin_dashboard_content_equipment_equipment_table tbody tr"").length && $("".admin_dashboard_content_equipment_equipment_table tbody tr"").length >= calc) {
                        $("".admin_dashboard_content_equipment_loadmore"").show();
                    }
                }, 1000);
");
            WriteLiteral(@"            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    });

    function getAllEquipment() {
        $("".admin_dashboard_content_equipment_loadmore"").hide();
        $(""#equipmentempty"").hide();

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetEquipment',
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                $(""#equipmenttoploading"").show();

                if (data[0] != 0) {
                    $(""#equipmentpage"").val(0);
                    $(""#numofequipment"").val(data[0]);
                    delete data[0];

                    setTimeout(function () {
                        $(""#equipmenttoploading"").hide();

                        if (data.length != 0) {
                            $("".admin_dashboard_content_equipment_equipment_table tbody"").");
            WriteLiteral(@"empty();
                            $("".admin_dashboard_content_equipment_equipment_table tbody"").append(data);

                            $(""#equipmentpage"").val(parseInt($(""#equipmentpage"").val()) + 1);

                            var calc = 10 * $(""#equipmentpage"").val();
                            if ($(""#numofequipment"").val() > $("".admin_dashboard_content_equipment_equipment_table tbody tr"").length && $("".admin_dashboard_content_equipment_equipment_table tbody tr"").length >= calc) {
                                $("".admin_dashboard_content_equipment_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_equipment_equipment_table tbody"").empty();
                            $(""#equipmentempty"").show();
                        }
                    }, 1000);
                }
            },
            error: function (error) {
                console.log(error);
           ");
            WriteLiteral(@"     alert(""Error while retrieving data"");
            }
        });
    }
    function searchEquipment(keyword) {
        $("".admin_dashboard_content_equipment_loadmore"").hide();
        $(""#equipmentempty"").hide();

        $.ajax({
            type: ""POST"",
            url: '/Admin/GetEquipment?keyword=' + keyword,
            dataType: ""json"",
            contentType: ""application/json; charset=utf-8"",
            success: function (data) {
                if (data[0] != 0) {
                    $(""#equipmentpage"").val(0);
                    $(""#numofequipment"").val(data[0]);
                    delete data[0];

                        if (data.length != 0) {
                            $("".admin_dashboard_content_equipment_equipment_table tbody"").empty();
                            $("".admin_dashboard_content_equipment_equipment_table tbody"").append(data);

                            $(""#equipmentpage"").val(parseInt($(""#equipmentpage"").val()) + 1);

                           ");
            WriteLiteral(@" var calc = 10 * $(""#equipmentpage"").val();
                            if ($(""#numofequipment"").val() > $("".admin_dashboard_content_equipment_equipment_table tbody tr"").length && $("".admin_dashboard_content_equipment_equipment_table tbody tr"").length >= calc) {
                                $("".admin_dashboard_content_equipment_loadmore"").show();
                            }
                        }
                        else {
                            $("".admin_dashboard_content_equipment_equipment_table tbody"").empty();
                            $(""#equipmentempty"").show();
                        }
                }
            },
            error: function (error) {
                console.log(error);
                alert(""Error while retrieving data"");
            }
        });
    }

    function enableAddEquipment() {
        $(""#equipmentoverlay"").addClass(""active"");
        $(""#addequipmentoverlay"").addClass(""active"");
        $(""#addequipmentoverlay input"").val("""")");
            WriteLiteral(@";
    }

    function closeAddEquipment() {
        $(""#equipmentoverlay"").removeClass(""active"");
        $(""#addequipmentoverlay"").removeClass(""active"");
    }

    function addEquipment() {
        var name = $(""#equipmentname"").val();
        var type = $(""#equipmenttype"").val();
        var stock = $(""#equipmentstock"").val();
        
        var equipment = {
            EquipmentName: name, 
            Type: type, 
            NumberOfPieces: parseInt(stock)
        };
        console.log(equipment);
        console.log(JSON.stringify(equipment));

        var formData = new FormData();
        formData.append(""equipmentName"", name);
        formData.append(""type"", type);
        formData.append(""stock"", stock);

        $(""#equipmentname"").css(""border"", ""2px solid gray"");
        $(""#equipmentname"").css(""border"", ""2px solid gray"");
        $(""#equipmentstock"").css(""border"", ""2px solid gray"");

        if (name != """" && stock != """" && type != """") {
            $.ajax({
 ");
            WriteLiteral(@"                           url : '/Admin/AddEquipment',
                            type: 'POST',
                            dataType: 'json',
                            /*data: JSON.stringify(equipment),
                            contentType: ""application/json; charset=utf-8"",*/
                            data: formData,
                            contentType: false,
                            processData: false,
                            success: function (data) {
                                    if (data == ""Success"") {
                                        closeAddEquipment();
                                        getAllEquipment();
                                        alert(""Equipment added successfully!"");
                                    }
                                    else {
                                        alert(""Error while adding equipment"");
                                    }
                                },
                            erro");
            WriteLiteral(@"r: function (error) {
                                alert(""Error while adding equipment"");
                                console.log(error);
                            }
                        }).done(function(response) {
                            console.log(response);
                        });
        }
        else {
            $(""#equipmentname"").css(""border"", ""2px solid red"");
            $(""#equipmentstock"").css(""border"", ""2px solid red"");
            $(""#equipmenttype"").css(""border"", ""2px solid red"");
            alert(""All fields are required!"");
        }
    }

    function equipmentEdit(id, str, equipmentnum) {
        if (str == 1) {
            $.ajax({
                type: ""POST"",
                url: '/Admin/GetEditEquipmentDetails?id=' + id + '&index=' + equipmentnum,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function (data) {
                    $(""#equipmentdetailsoverlay"").re");
            WriteLiteral(@"move();
                    $("".admin_dashboard_content_equipments_popup"").append(data);

                    
                    $("".admin_dashboard_content_equipments_popup_overlay_content_info_editbtns"").prop(""hidden"", ""true"");

                    $(""#equipmentoverlay"").addClass(""active"");
                },
                error: function (error) {
                                alert(""Error while retrieving data"");
                                console.log(error);
                            }
            });
        }
        else  {
            $.ajax({
                type: ""POST"",
                url: '/Admin/GetEditEquipmentDetails?id=' + id + '&index=' + equipmentnum,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                success: function (data) {
                    $(""#equipmentdetailsoverlay"").remove();
                    $("".admin_dashboard_content_equipments_popup"").append(data);


                    $(");
            WriteLiteral(@""".admin_dashboard_content_equipments_popup_overlay_content_info_editbtns"").prop(""hidden"", ""true"");

                    $(""#equipmentoverlay"").addClass(""active"");
                },
                error: function (error) {
                                alert(""Error while retrieving data"");
                                console.log(error);
                            }
            });
        }
    }

    function closeEquipmentOverlay() {
        $(""#equipmentoverlay"").removeClass(""active"");
        $(""#equipmentdetailsoverlay"").remove();
    }

    function cancelEquipmentEdit() {
        
        $("".admin_dashboard_content_equipments_popup_overlay_content_info_btns"").prop(""hidden"", false);
        $("".admin_dashboard_content_equipments_popup_overlay_content_info_editbtns"").prop(""hidden"", true);
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
